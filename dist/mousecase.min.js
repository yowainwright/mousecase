/**
  mousecase - Mousecase is a JavaScript utility supporting touch-like horizontal scrolling with a mouse!
  @version v2.0.0
  @link https://github.com/yowainwright/mousecase#readme
  @author Jeff Wainwright <yowainwright@gmail.com> (https://jeffry.in)
  @license MIT
**/
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).mousecase=e()}(this,function(){"use strict";return function(t,e){var s=void 0===e?{}:e,n=s.cssClass,o=void 0===n?"js-mousecase":n,i=s.rule,r=void 0===i||i;return{props:{el:document.querySelector(t),cssClass:o,rule:r,activeClass:o+"--is-active"},state:{isDown:!1,startx:0,scrollLeft:0,isOn:!1},canUseMouseCase:function(t,e){return!(!t||1<document.querySelectorAll(t).length||!1===e)},mouseMove:function(t){if(this.state.isDown){t.preventDefault();var e=this.props.el,s=3*(t.pageX-e.offsetLeft-this.state.startx);return e.scrollLeft=this.state.scrollLeft-s,this}},mouseDown:function(t){var e=this.props,s=e.activeClass,n=e.el;return this.state.isDown=!0,n.classList.add(s),this.state.startx=t.pageX-n.offsetLeft,this.state.scrollLeft=n.scrollLeft,this},mouseNotDown:function(){this.state.isDown=!1;var t=this.props,e=t.activeClass;return t.el.classList.remove(e),this},manageState:function(){var e=this;if(this.state.isOn){var t=this.props.el;return t.addEventListener("mousemove",function(t){return e.mouseMove(t)}),t.addEventListener("mousedown",function(t){return e.mouseDown(t)}),t.addEventListener("mouseleave",function(){return e.mouseNotDown()}),t.addEventListener("mouseup",function(){return e.mouseNotDown()}),this}},init:function(){this.canUseMouseCase(t,this.props.rule)&&(this.state.isOn=!0,this.manageState())},off:function(){return this.state.isOn=!1,this},on:function(){return this.state.isOn=!0,this}}}});
